/**
* Namf_Communication
* AMF Communication Service Â© 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.1.0.alpha-1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "LadnInfo.h"

namespace oai {
namespace amf {
namespace model {

LadnInfo::LadnInfo()
{
    m_Ladn = "";
    m_PresenceIsSet = false;
    
}

LadnInfo::~LadnInfo()
{
}

void LadnInfo::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const LadnInfo& o)
{
    j = nlohmann::json();
    j["ladn"] = o.m_Ladn;
    if(o.presenceIsSet())
        j["presence"] = o.m_Presence;
}

void from_json(const nlohmann::json& j, LadnInfo& o)
{
    j.at("ladn").get_to(o.m_Ladn);
    if(j.find("presence") != j.end())
    {
        j.at("presence").get_to(o.m_Presence);
        o.m_PresenceIsSet = true;
    } 
}

std::string LadnInfo::getLadn() const
{
    return m_Ladn;
}
void LadnInfo::setLadn(std::string const& value)
{
    m_Ladn = value;
    
}
PresenceState LadnInfo::getPresence() const
{
    return m_Presence;
}
void LadnInfo::setPresence(PresenceState const& value)
{
    m_Presence = value;
    m_PresenceIsSet = true;
}
bool LadnInfo::presenceIsSet() const
{
    return m_PresenceIsSet;
}
void LadnInfo::unsetPresence()
{
    m_PresenceIsSet = false;
}

}
}
}

